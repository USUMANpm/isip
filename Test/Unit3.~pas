unit Unit3;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Menus, StdCtrls, ExtCtrls, ComCtrls, Unit1, ImgList;

type
  TForm3 = class(TForm)
    Panel1: TPanel;
    MainMenu1: TMainMenu;
    N1: TMenuItem;
    Timer1: TTimer;
    OpenDialog1: TOpenDialog;
    Button1: TButton;
    Button2: TButton;
    Label1: TLabel;
    Memo1: TMemo;
    PageControl1: TPageControl;
    Button3: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormDestroy(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure CreateQuestion(Sender: TObject);
    procedure CreateAnswer(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure FormMouseWheel(Sender: TObject; Shift: TShiftState;
      WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Tabulation;
  end;

var
  Form3: TForm3;
  CheckAnswers: array[0 .. MaxQuestionCount - 1, 0 .. MaxAnswerCount - 1] of TCheckBox;
  Test: TTest;
  TimeToAnswer: Integer;

implementation

{$R *.dfm}

procedure TForm3.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
  Form1.ListBox1.Visible:=true;
  Form1.Button1.Visible:=true;
end;

procedure TForm3.FormDestroy(Sender: TObject);
begin
  Form3 := nil;
end;

procedure TForm3.Button1Click(Sender: TObject); // Открыть
var
  i, j: Integer;
  ScrollBox: TScrollBox;
  FTest: File of TTest;
//  FPath: String;
begin
  Button3.Anchors := [akLeft, akBottom]; // .............

  OpenDialog1.InitialDir := ExtractFileDir(Application.ExeName);

  if not OpenDialog1.Execute then Exit;

  AssignFile(FTest, OpenDialog1.FileName);
  Reset(FTest);
  Read(FTest, Test);
  CloseFile(FTest);

 // FPath := ExtractFilePath(Application.ExeName) + 'Images\' +
   //        ExtractFileName(OpenDialog1.FileName) + '\';

  for i := PageControl1.PageCount - 1 downto 0 do
    PageControl1.Pages[i].Free;

  Memo1.Lines.Text := Test.TestName;

  for i := 0 to Test.QuestionCount - 1 do
  begin
    CreateQuestion(nil);

    ScrollBox := TScrollBox(PageControl1.Pages[i].FindComponent('ScrollBox1'));
    for j := 0 to Test.Questions[i].AnswerCount - 1 do
    begin
      CreateAnswer(ScrollBox);
    end;
    ScrollBox.VertScrollBar.Position := 0;
  end;

  with TTabSheet.Create(PageControl1) do
  begin
    PageControl := PageControl1;
    TabVisible := False;
  end;
//  PageControl1.ActivePageIndex := 0;

  Caption := 'Тест - ' + ExtractFileName(OpenDialog1.FileName);

  ShowMessage('Тест загружен.');
  Button2.Enabled := True;
end;

procedure TForm3.CreateQuestion(Sender: TObject);
var
  i: Integer;
  Panel: TPanel;
  ScrollBox: TScrollBox;
  TabSheet: TTabSheet;
begin
  TabSheet := TTabSheet.Create(PageControl1);
  with TabSheet do
  begin
    PageControl := PageControl1;
    TabVisible := False;
  end;

  i := PageControl1.PageCount - 1;

  Panel := TPanel.Create(TabSheet);
  with Panel do
  begin
//    Height := 185;
    Name := 'Panel1';
    Caption := '';
    BevelOuter := bvNone;
    Align := alTop;
    Parent := TWinControl(TabSheet);
  end;

  with TLabel.Create(Panel) do
  begin
    Top := 8;
    Left := 8;
    Caption := 'Вопрос №' + IntToStr(i + 1);
    Parent := Panel;
  end;

  with TLabel.Create(Panel) do
  begin
    Top := 8;
    Left := Panel.ClientWidth - 160;
    if Test.Questions[i].Timer = 0 then
      Caption := 'Время на ответ: не ограничено'
    else
      Caption := Format('Время на ответ: %d сек.', [Test.Questions[i].Timer]);
    Name := 'TmrLabel';
    Anchors := [akTop, akRight];
    Parent := Panel;
  end;

  if Test.Questions[i].Question <> '' then
    with TMemo.Create(Panel) do
    begin
      Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
      Left := 8;
      Width := TabSheet.ClientWidth - 16;
      Height := 65;
//      Name := 'Memo1';
      Text := Test.Questions[i].Question;
//      MaxLength := 255;
      Anchors := Anchors + [akRight];
      Parent := Panel;
    end;

  if Test.Questions[i].Image_Question <> '' then
    with TImage.Create(Panel) do
    begin
      Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
      Left := 8;
      Width := 300;
      Height := 200;
      Stretch := True;
      Proportional := True;
      Parent := Panel;
      try
        Picture.LoadFromFile(ExtractFilePath(Application.ExeName) + 'Images\' +
          ExtractFileName(OpenDialog1.FileName) + '\' + Test.Questions[i].Image_Question);
      except
        Free;
        ShowMessage('Ошибка загрузки изображения!');
      end;
    end;

  with TLabel.Create(Panel) do
  begin
    Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 16;
    Left := 8;
//    Name := 'Label1';
    Caption := 'Варианты ответов:';
    Parent := Panel;
  end;

  Panel.Height := TControl(Panel.Components[Panel.ComponentCount - 1]).BoundsRect.Bottom + 10;

  ScrollBox := TScrollBox.Create(TabSheet);
  with ScrollBox do
  begin
    Name := 'ScrollBox1';
    Align := alClient;
    Parent := TabSheet;
  end;

end;

procedure TForm3.CreateAnswer(Sender: TObject);
var
  i, j: Integer;
  Panel: TPanel;
begin
  Panel := TPanel.Create(TComponent(Sender));
  with Panel do
  begin
//    Height := 121;
    Caption := '';
    Top := TScrollBox(Panel.Owner).VertScrollBar.Range;
    Align := alTop;
    Parent := TWinControl(Panel.Owner);
  end;

  i := PageControl1.PageCount - 1;
  j := Panel.Parent.ComponentCount - 1;

  with TLabel.Create(Panel) do
  begin
    Top := 8;
    Left := 8;
    Caption := 'Вариант №' + IntToStr(j + 1);
    Parent := Panel;
  end;

  if Test.Questions[i].Answer[j].Text <> '' then
    with TLabel.Create(Panel) do
    begin
      Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
      Left := 8;
      Caption := Test.Questions[i].Answer[j].Text;
      Parent := Panel;
    end;

  if Test.Questions[i].Answer[j].Image <> '' then
    with TImage.Create(Panel) do
    begin
      Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
      Left := 8;
      Width := 300;
      Height := 200;
      Stretch := True;
      Proportional := True;
      Parent := Panel;
      try
        Picture.LoadFromFile(ExtractFilePath(Application.ExeName) + 'Images\' + ExtractFileName(OpenDialog1.FileName) + '\' + Test.Questions[i].Answer[j].Image);
      except
        Free;
        ShowMessage('Ошибка загрузки изображения!');
        CheckAnswers[i,j] := TCheckBox.Create(Panel);
  with CheckAnswers[i,j] do
  begin
    Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
    Left := 8;
    Name := 'CheckBox';
    Caption := '';
    Parent := Panel;
  end;
      end;
    end;
    CheckAnswers[i,j] := TCheckBox.Create(panel);
  with CheckAnswers[i,j] do
  begin
    Top := TControl(Panel.Components[Panel.ComponentCount - 2]).BoundsRect.Bottom + 8;
    Left := 8;
    Name := 'CheckBox1';
    Caption := '';
    Parent := Panel;
  end;


  Panel.Height := TControl(Panel.Components[Panel.ComponentCount - 1]).BoundsRect.Bottom + 10;
end;


procedure TForm3.Button2Click(Sender: TObject);
var
  i, j: Integer;
begin
  // обнуление ЧекБоксов перед началом теста
  for i := 0 to Test.QuestionCount - 1 do
    for j := 0 to Test.Questions[i].AnswerCount - 1 do
      CheckAnswers[i,j].Checked := False;
  Button1.Enabled := False;
  Button2.Enabled := False;
  Button3.Enabled := True;
  Button3.Click;

end;

procedure TForm3.Button3Click(Sender: TObject); // Next
var
l1,l2:tlabel;
i,j,r,l: Integer;
begin
  Timer1.Enabled := False;

  PageControl1.SelectNextPage(True, False);

  if PageControl1.ActivePageIndex = PageControl1.PageCount - 1 then
  begin
    Button1.Enabled := True;
    Button2.Enabled := True;
    Button3.Enabled := False;
    // обработка результатов
    r:=0;
    l:=0;
    for i := 0 to Test.QuestionCount - 1 do
    for j := 0 to Test.Questions[i].AnswerCount - 1 do
    if CheckAnswers[i,j].Checked and test.Questions[i].Answer[j].Correct then
    r:=r+1
    else if CheckAnswers[i,j].Checked and (not test.Questions[i].Answer[j].Correct) then
    l:=l+1;
    l1:=tlabel.Create(pagecontrol1.ActivePage);
    l1.Parent:=pagecontrol1.ActivePage;
    l1.Left:=100;
    l1.Top:=100;
    l1.Caption:='Правильных ответов: '+inttostr(r);
    l2:=tlabel.Create(pagecontrol1.ActivePage);
    l2.Parent:=pagecontrol1.ActivePage;
    l2.Left:=100;
    l2.Top:=200;
    l2.Caption:='Неправильных ответов: '+inttostr(l);
    Exit;
  end;

  if Test.Questions[PageControl1.ActivePageIndex].Timer <> 0 then
  begin
    TimeToAnswer := Test.Questions[PageControl1.ActivePageIndex].Timer;
    Timer1.Enabled := True;
  end;
end;

procedure TForm3.Timer1Timer(Sender: TObject);
var
  TmrLabel: TLabel;
begin
  if TimeToAnswer = 0 then
    Button3.Click
  else
  begin
    dec(TimeToAnswer);
    TmrLabel := TLabel(PageControl1.ActivePage.FindComponent('Panel1').FindComponent('TmrLabel'));
    TmrLabel.Caption := Format('Время на ответ: %d сек.', [TimeToAnswer]);
  end;
end;

procedure TForm3.FormMouseWheel(Sender: TObject; Shift: TShiftState;
  WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);
var
  VSB: TControlScrollBar;
begin
  VSB := TScrollBox(PageControl1.ActivePage.FindComponent('ScrollBox1')).VertScrollBar;
  VSB.Position := VSB.Position - (WheelDelta div 12);
end;

procedure TForm3.Tabulation;
begin
end;


end.
